buildscript {
  repositories {
    mavenLocal()
    maven { url 'https://maven.aliyun.com/repository/public/' }
    mavenCentral()
  }
  dependencies {
    classpath 'net.researchgate:gradle-release:2.6.0'
  }
  //skip Test tasks
  gradle.taskGraph.whenReady {
    tasks.each { task ->
      if (task.name.contains("test")) {
        task.enabled = false
      }
    }
  }
}

apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'net.researchgate.release'


release {
  failOnUnversionedFiles = true
  failOnCommitNeeded = true
  failOnPublishNeeded = true
  failOnSnapshotDependencies = false
  failOnUpdateNeeded = true
  revertOnFail = true
  tagTemplate = 'v${version}'
  scmAdapters = [
      net.researchgate.release.GitAdapter
  ]

  git {
    requireBranch = 'master'
    pushToRemote = 'origin'
    pushToBranchPrefix = ''
    commitVersionFileOnly = false
    signTag = false
  }

}


afterReleaseBuild.dependsOn uploadArchives

configurations {
  inline
  compile.extendsFrom(inline)
}

configurations.all {
  resolutionStrategy {
    // cache dynamic versions for 10 seconds
    cacheDynamicVersionsFor 10, 'seconds'
    // don't cache changing modules at all
    cacheChangingModulesFor 0, 'seconds'
  }
}

group="net.xdob.jmdns"
version="1.0.0-SNAPSHOT"


sourceCompatibility = "1.8"
targetCompatibility = "1.8"

repositories {
  mavenLocal()
  maven { url 'https://maven.aliyun.com/repository/public/' }
  mavenCentral()
}

dependencies {
  implementation 'org.slf4j:slf4j-api:1.7.25'
  testImplementation 'junit:junit:4.13.1'
  testImplementation 'org.easymock:easymock:3.3.1'
  testImplementation 'org.powermock:powermock-module-junit4:2.0.7'
  testImplementation 'org.powermock:powermock-api-easymock:2.0.7'
}



java {
  withSourcesJar()
  withJavadocJar()
}

javadoc {
  options.encoding = 'UTF-8'
  exclude 'javax/jmdns/**'
}



uploadArchives {
  repositories {
    mavenDeployer {
      //beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

      repository(url: "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/") {
        authentication(userName: project.ossrhUsername, password: project.ossrhPassword)
      }

      snapshotRepository(url: "https://s01.oss.sonatype.org/content/repositories/snapshots/") {
        authentication(userName: project.ossrhUsername, password: project.ossrhPassword)
      }
    }
  }
}


tasks.withType(JavaCompile) {
  options.encoding = 'UTF-8'
}
